name: Auto Release FindCode

on:
  push:
    branches:
      - Release
      - Develop
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release version (格式 vX.X.X)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  determine-release:
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.check.outputs.should-release }}
      release-tag: ${{ steps.check.outputs.release-tag }}
    steps:
      - name: Determine release parameters
        id: check
        run: |
          # 手动触发时使用输入版本
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should-release=true" >> $GITHUB_OUTPUT
            echo "release-tag=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
          
          # 自动触发时检查 commit 消息
          elif [[ "${{ github.event.head_commit.message }}" =~ release:\ (v[0-9]+\.[0-9]+\.[0-9]+) ]]; then
            echo "should-release=true" >> $GITHUB_OUTPUT
            echo "release-tag=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          
          # 其他情况不发布
          else
            echo "should-release=false" >> $GITHUB_OUTPUT
            echo "release-tag=none" >> $GITHUB_OUTPUT
          fi

  build-release:
    needs: determine-release
    if: needs.determine-release.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ windows, linux, darwin ]
        goarch: [ amd64, arm64 ]
        include:
          - goos: windows
            ext: .exe
          - goos: linux
            ext:
          - goos: darwin
            ext:

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.8'

      - name: Build CLI binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          OUTPUT="findcode-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}"
          go build -o $OUTPUT ./cmd/main.go
          echo "CLI_OUTPUT=$OUTPUT" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.determine-release.outputs.release-tag }}
          name: "Release ${{ needs.determine-release.outputs.release-tag }}"
          body: "Automated multi-platform build for ${{ needs.determine-release.outputs.release-tag }}"
          draft: false
          prerelease: false
          files: |
            findcode-*

  compile-develop:
    if: ${{ github.ref == 'refs/heads/develop' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.8'

      - name: Compile code
        run: go build ./cmd/main.go